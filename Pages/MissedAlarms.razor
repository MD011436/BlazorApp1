@page "/MissedAlarms"


<PageTitle>Missed Alarms</PageTitle>

@*<html lang="en">*@
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
	<div class="text-center" >
		<h1>Alarm Items</h1>

		@*<p>This component demonstrates using the Alarm List Report</p>*@
	</div>

  </head>
  <body>

	<div class="container">
		<div class="row">
			<h2>Filters for this report</h2>
			<div class= "col-md-2">
				<label class="form-label select-label" for="serverName">Alarm Server:</label>
				<RadzenDropDown AllowClear="true" AllowFiltering="true" TValue="string"
                            @bind=@multipleValues Multiple="true" Placeholder="Select..." Data=@serverNames
								Change=@(args => OnChange(args, "Alarm Server selection")) Class="w-100" />
			</div>
			<div class= "col-md-2">
				<input class="form-check-input" type="checkbox" id="excludeHealthCheck" name="excludeHealthCheck" @bind=ExcludeHealthCheck/>
				<label for="excludeHeathCheck">Exclude HealthCheck</label>
			</div>
			<div class= "col-md-2">
				<label for="accountNumber">Account Number</label>
				<input class="form-input" type="text" id="accountNumber" name="accountNumber"  @bind=accountNumber />
			</div>
			<div class= "col-md-2">
				<label for="processTime">Process Time (sec)</label>
				@*<input class="form-input" type="text" value="" id="processTime" name="processTime" />*@
				<RadzenNumeric Name="processTime" @bind-Value=@processTimeSec />
				@*<RadzenNumericRangeValidator Component="processTime" Min="1" Max="3600" Text="Process Time should be between 1 and 10" />*@
			</div>
			<div class= "col-md-2">
				<label for="searchFromTime">Search from DateTime</label>
				@*<input class="form-input" type="text" value="" id="searchFromTime" name="searchFromTime" />*@
				<RadzenDatePicker @bind-Value=@inputTime ShowTime="true" ShowSeconds="false" ShowTimeOkButton="true" TimeOnly="false" DateFormat="yyyy-MM-ddTHH:mm" Change=@OnChangeStartTime />
			</div>
			<div class= "col-md-2">
				<label for="searchToTime">Search to DateTime</label>
				@*<input class="form-input" type="text" value="" id="searchToTime" name="searchToTime" />*@
				<RadzenDatePicker @bind-Value=@inputTime ShowTime="true" ShowSeconds="false" ShowTimeOkButton="true" TimeOnly="false" DateFormat="yyyy-MM-ddTHH:mm" Change=@OnChangeEndTime />
			</div>
			<button class="btn btn-primary" @onclick="submitFilter" >Submit Filter</button>
		</div>
	</div>
	
    <div class="container vertical-scrollable" >
		<div class="row">
			<table class="table">
			
				<thead>
					<tr>
						<th>timeToPickup</th>
						<th>timeToProcess</th>
						<th>incidentNumber</th>
						<th>dateTimeReceived</th>
						<th>Qualifier</th>
						<th>Code</th>
						<th>Zone</th>
						<th>Account Number</th>
						
					</tr>
				</thead>
				<tbody>
<!--
						
-->
						<tr>
							<td>0</td>
							<td>0</td>
							<td>19979*42963045*1033*1</td>
							<td>2022-09-12 12:56:03.333</td>
							<td>3</td>
							<td>131</td>
							<td>007</td>
							<td>C06982956</td>							
						 </tr>
						 <tr>
							<td>10</td>
							<td>0</td>
							<td>19979*42963045*1033*1</td>
							<td>2022-09-11 13:45:01.123</td>
						 	<td>1</td>
							<td>602</td>
							<td>000</td>
							<td>S22S-1EF733</td>							
						 </tr>
						 <tr>
							<td>0</td>
							<td>10</td>
							<td>19979*42963045*1033*1</td>
							<td>2022-09-11 10:12:03.333</td>
						 	<td>1</td>
							<td>383</td>
							<td>004</td>
							<td>S22S-0390fd0</td>							
						 </tr>
				</tbody>
			</table>
			<div class="text-center" >
				<nav  style="position: absolute; left: 50%; transform: translatex(-50%) " aria-label="Page navigation example">
				  <ul class="pagination">
					<li class="page-item text-center">
					  <a class="page-link" href="#" aria-label="Previous">
						<span aria-hidden="true">&laquo;</span>
						<span class="sr-only">Previous</span>
					  </a>
					</li>
					<li class="page-item"><a class="page-link" href="#">1</a></li>
					<li class="page-item"><a class="page-link" href="#">2</a></li>
					<li class="page-item"><a class="page-link" href="#">3</a></li>
					<li class="page-item">
					  <a class="page-link" href="#" aria-label="Next">
						<span aria-hidden="true">&raquo;</span>
						<span class="sr-only">Next</span>
					  </a>
					</li>
				  </ul>
				</nav>
			</div>
		</div>
   
		<br/>
		<br/>
		<div>
			<div style="position: absolute; left: 50%; transform: translatex(-50%) ">
				<label for="fileName">Export to Excel File Name:</label>
				<input type="text" id="fileName" name="fileName" @bind="newExcelFile" />
				<button class="btn btn-primary" @onclick="exportToExcel" >Export</button>
			</div>
		</div>
	</div>

     </body>
@*</html>*@


@code {
	private string alarmServers = String.Empty;
	private string newExcelFile = String.Empty;
	private DateTime? StartTime = DateTime.UtcNow;
	private DateTime? EndTime = DateTime.UtcNow;
	private DateTime? inputTime = DateTime.UtcNow;
	private int processTimeSec = 0;
	private bool ExcludeHealthCheck = true;
	private string accountNumber = String.Empty;

	int selectedValue;
	IEnumerable<string> serverNames = new string[] { "All", "NJ-1", "NJ-2", "FL-1", "FL-2", "TX" };
	IEnumerable<string> multipleValues;

	void OnChangeStartTime(DateTime? value)
	{
		if (value >= EndTime)
		{
			//display error
			inputTime = StartTime;
		}
		else
			StartTime = value;

	}

	void OnChangeEndTime(DateTime? value)
	{
		if (value <= StartTime)
		{
			//display error
			inputTime = EndTime;
		}
		else
			EndTime = value;
	}

	void OnChange(object value, string name)
	{
		var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;
		if (name == "Alarm Server selection")
			alarmServers = str.ToString();

	}


    protected void submitFilter()
	{

	}

	protected void exportToExcel()
	{

	}


}
